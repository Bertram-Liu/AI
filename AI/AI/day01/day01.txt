# 机器学习概述
# 数据集的结构
# 数据的特征工程
# 数据的类型

# mysql:
#     1. 性能瓶颈, 读取速度
#     2. 格式不太符合机器学习要求数据的格式

# pandas: 读取工具 (基于numpy)
# numpy 快的原因:
    # 1. 释放GIL锁
    # 2. 真正的多线程

数据集的组成
  dataFrame类型
    特征值+目标值
      列: 特征值
      行: 目标值

特征工程
  ** 重要角色
  scikit-learn
  数据的特征抽取
  数据的特征预处理
  意义:
    提高预测的效果

特征工程
  scikit-learn
    python语言的机器学习工具
    Scikit-learn包括
  分类
  回归
  聚类
  特征抽取
    包括文本, 字符串
    特征值化

文本特征抽取: Count
  文本分类
  情感分析

对于单个英文字母不统计: 因为不能反映文章的主题 (没有分类依据)

Tf: term freency 词的频率   出现的次数
idf: 逆文档频率   log(总文档数量/该词出现等等文档数量)

数值型数据: 标准缩放
  1. 归一化
    缺点:
      对异常点影响不好 鲁棒性较差, 只适合传统精确小数据场景
  2. 标准化
      优点:
        异常点不受平均值影响
        在已有足够多的情况下比较稳定, 适合嘈杂的大数据场景使用
  3. 缺失值
    删除
    填补均值, 中位数(每行, 每列[建议])

类别型数据: one-hot编码
  sklearn-preprocessing   所有预处理方法都在该API

时间类型:
  时间的切分

方差:
  方差的大小决定离散度



降维: 特征的数量
  1. 特征选择
    原因:
      冗余
      噪声
    Filter(过滤式)
    Embedded(嵌入式)
  2. 主成分分析

PCA
  特征数量达到上百的时候             考虑数据的简化
  本质:
    是一种分析, 简化数据集的技术
  目的:
    损失少量信息

  作用:


n_components()  # 小数  90%-95% 一般
                # 整数


合并各张表到一张表当中e

pd.merge()

开发工程师, 算法工程师
1) 算法是核心, 数据和计算是基础
2) 找准定位,
我们应该怎么做
  1. 学会分析

数据类型
  离散型数据: 区间内不可分的

  连续型数据: 区间内无限划分

算法分类:
  监督学习: 有特征值+目标值         有标准答案
    分类: 离散型(目标值)
      二分类: (基础)

    回归: 连续型(目标值)

  非监督学习: 特征值               无标准答案


机器学习开发流程:   (关注数据的来源)    爬虫不一定真实
  1. 公司本身有数据
  2. 合作过来的数据(大多数)
  3. 购买的数据(少数)
  原始数据:
    1. 明确问题做什么
        建立模型:
        根据数据类型划分应用种类
    2. 数据的基本处理
        pd去处理数据
    3. 特征工程
        特征进行处理  (重要)
    4. 找到合适的算法进行预测
        模型: 算法+数据
        分类:
        回归:
    5. 模型的评估    (循环)
        判定效果
          1) 如果不合格, 换算法  (调参)
          2) 特征工程处理
    6. 上线使用  (API形式)







